# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.13

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: my_arrrow
# Configuration: debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5

# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include rules.ninja


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/wamsi/raidStorage/myarrow/build && /usr/bin/cmake -S/home/wamsi/raidStorage/myarrow -B/home/wamsi/raidStorage/myarrow/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1
build rebuild_cache: phony CMakeFiles/rebuild_cache.util

#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/wamsi/raidStorage/myarrow/build && /usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
  DESC = No interactive CMake dialog available...
  restat = 1
build edit_cache: phony CMakeFiles/edit_cache.util
# =============================================================================
# Object build statements for EXECUTABLE target arrow_gpu_test


#############################################
# Order-only phony target for arrow_gpu_test

build cmake_object_order_depends_target_arrow_gpu_test: phony || CMakeFiles/arrow_gpu_test.dir
build CMakeFiles/arrow_gpu_test.dir/arrow_gpu_test.cpp.o: CXX_COMPILER__arrow_gpu_test ../arrow_gpu_test.cpp || cmake_object_order_depends_target_arrow_gpu_test
  DEP_FILE = CMakeFiles/arrow_gpu_test.dir/arrow_gpu_test.cpp.o.d
  FLAGS = -Wall -g   -std=gnu++17
  INCLUDES = -I/home/wamsi/raidStorage/arrow/cpp/build/debug/../include
  OBJECT_DIR = CMakeFiles/arrow_gpu_test.dir
  OBJECT_FILE_DIR = CMakeFiles/arrow_gpu_test.dir

# =============================================================================
# Link build statements for EXECUTABLE target arrow_gpu_test


#############################################
# Link the executable arrow_gpu_test

build arrow_gpu_test: CXX_EXECUTABLE_LINKER__arrow_gpu_test CMakeFiles/arrow_gpu_test.dir/arrow_gpu_test.cpp.o | /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow_cuda.so
  FLAGS = -Wall -g
  LINK_LIBRARIES = -Wl,-rpath,/home/wamsi/raidStorage/arrow/cpp/build/debug /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow_cuda.so
  OBJECT_DIR = CMakeFiles/arrow_gpu_test.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = arrow_gpu_test
  TARGET_PDB = arrow_gpu_test.dbg
# =============================================================================
# Object build statements for EXECUTABLE target arrow_test


#############################################
# Order-only phony target for arrow_test

build cmake_object_order_depends_target_arrow_test: phony || CMakeFiles/arrow_test.dir
build CMakeFiles/arrow_test.dir/arrow_test.cpp.o: CXX_COMPILER__arrow_test ../arrow_test.cpp || cmake_object_order_depends_target_arrow_test
  DEP_FILE = CMakeFiles/arrow_test.dir/arrow_test.cpp.o.d
  FLAGS = -Wall -g   -std=gnu++17
  INCLUDES = -I/home/wamsi/raidStorage/arrow/cpp/build/debug/../include
  OBJECT_DIR = CMakeFiles/arrow_test.dir
  OBJECT_FILE_DIR = CMakeFiles/arrow_test.dir

# =============================================================================
# Link build statements for EXECUTABLE target arrow_test


#############################################
# Link the executable arrow_test

build arrow_test: CXX_EXECUTABLE_LINKER__arrow_test CMakeFiles/arrow_test.dir/arrow_test.cpp.o | /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so
  FLAGS = -Wall -g
  LINK_LIBRARIES = -Wl,-rpath,/home/wamsi/raidStorage/arrow/cpp/build/debug /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so
  OBJECT_DIR = CMakeFiles/arrow_test.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = arrow_test
  TARGET_PDB = arrow_test.dbg
# =============================================================================
# Object build statements for EXECUTABLE target device_to_device_copy


#############################################
# Order-only phony target for device_to_device_copy

build cmake_object_order_depends_target_device_to_device_copy: phony || CMakeFiles/device_to_device_copy.dir
build CMakeFiles/device_to_device_copy.dir/device_to_device_copy.cpp.o: CXX_COMPILER__device_to_device_copy ../device_to_device_copy.cpp || cmake_object_order_depends_target_device_to_device_copy
  DEP_FILE = CMakeFiles/device_to_device_copy.dir/device_to_device_copy.cpp.o.d
  FLAGS = -Wall -g   -std=gnu++17
  INCLUDES = -I/home/wamsi/raidStorage/arrow/cpp/build/debug/../include
  OBJECT_DIR = CMakeFiles/device_to_device_copy.dir
  OBJECT_FILE_DIR = CMakeFiles/device_to_device_copy.dir

# =============================================================================
# Link build statements for EXECUTABLE target device_to_device_copy


#############################################
# Link the executable device_to_device_copy

build device_to_device_copy: CXX_EXECUTABLE_LINKER__device_to_device_copy CMakeFiles/device_to_device_copy.dir/device_to_device_copy.cpp.o | /usr/lib/x86_64-linux-gnu/libcudart_static.a /usr/lib/x86_64-linux-gnu/librt.so /usr/lib/x86_64-linux-gnu/libcuda.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow_cuda.so
  FLAGS = -Wall -g
  LINK_LIBRARIES = -Wl,-rpath,/home/wamsi/raidStorage/arrow/cpp/build/debug /usr/lib/x86_64-linux-gnu/libcudart_static.a -lpthread -ldl /usr/lib/x86_64-linux-gnu/librt.so /usr/lib/x86_64-linux-gnu/libcuda.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow_cuda.so
  OBJECT_DIR = CMakeFiles/device_to_device_copy.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = device_to_device_copy
  TARGET_PDB = device_to_device_copy.dbg
# =============================================================================
# Object build statements for EXECUTABLE target arrow_serialization


#############################################
# Order-only phony target for arrow_serialization

build cmake_object_order_depends_target_arrow_serialization: phony || CMakeFiles/arrow_serialization.dir
build CMakeFiles/arrow_serialization.dir/arrow_serialization.cpp.o: CXX_COMPILER__arrow_serialization ../arrow_serialization.cpp || cmake_object_order_depends_target_arrow_serialization
  DEP_FILE = CMakeFiles/arrow_serialization.dir/arrow_serialization.cpp.o.d
  FLAGS = -Wall -g   -std=gnu++17
  INCLUDES = -I/home/wamsi/raidStorage/arrow/cpp/build/debug/../include
  OBJECT_DIR = CMakeFiles/arrow_serialization.dir
  OBJECT_FILE_DIR = CMakeFiles/arrow_serialization.dir

# =============================================================================
# Link build statements for EXECUTABLE target arrow_serialization


#############################################
# Link the executable arrow_serialization

build arrow_serialization: CXX_EXECUTABLE_LINKER__arrow_serialization CMakeFiles/arrow_serialization.dir/arrow_serialization.cpp.o | /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so
  FLAGS = -Wall -g
  LINK_LIBRARIES = -Wl,-rpath,/home/wamsi/raidStorage/arrow/cpp/build/debug /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so
  OBJECT_DIR = CMakeFiles/arrow_serialization.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = arrow_serialization
  TARGET_PDB = arrow_serialization.dbg
# =============================================================================
# Object build statements for EXECUTABLE target device_to_device_cuda


#############################################
# Order-only phony target for device_to_device_cuda

build cmake_object_order_depends_target_device_to_device_cuda: phony || CMakeFiles/device_to_device_cuda.dir
build CMakeFiles/device_to_device_cuda.dir/device_to_device_cuda.cu.o: CUDA_COMPILER__device_to_device_cuda ../device_to_device_cuda.cu || cmake_object_order_depends_target_device_to_device_cuda
  DEP_FILE = CMakeFiles/device_to_device_cuda.dir/device_to_device_cuda.cu.o.d
  FLAGS = -g
  INCLUDES = -I/home/wamsi/raidStorage/arrow/cpp/build/debug/../include
  OBJECT_DIR = CMakeFiles/device_to_device_cuda.dir
  OBJECT_FILE_DIR = CMakeFiles/device_to_device_cuda.dir

# =============================================================================
# Device Link build statements for EXECUTABLE target device_to_device_cuda


#############################################
# Link the executable CMakeFiles/device_to_device_cuda.dir/cmake_device_link.o

build CMakeFiles/device_to_device_cuda.dir/cmake_device_link.o: CUDA_EXECUTABLE_DEVICE_LINKER__device_to_device_cuda CMakeFiles/device_to_device_cuda.dir/device_to_device_cuda.cu.o | /usr/lib/x86_64-linux-gnu/libcudart_static.a /usr/lib/x86_64-linux-gnu/librt.so /usr/lib/x86_64-linux-gnu/libcuda.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow_cuda.so
  FLAGS = -g
  LINK_LIBRARIES = /usr/lib/x86_64-linux-gnu/libcudart_static.a -lpthread -ldl
  OBJECT_DIR = CMakeFiles/device_to_device_cuda.dir
  TARGET_FILE = CMakeFiles/device_to_device_cuda.dir/cmake_device_link.o
# =============================================================================
# Link build statements for EXECUTABLE target device_to_device_cuda


#############################################
# Link the executable device_to_device_cuda

build device_to_device_cuda: CUDA_EXECUTABLE_LINKER__device_to_device_cuda CMakeFiles/device_to_device_cuda.dir/device_to_device_cuda.cu.o CMakeFiles/device_to_device_cuda.dir/cmake_device_link.o | /usr/lib/x86_64-linux-gnu/libcudart_static.a /usr/lib/x86_64-linux-gnu/librt.so /usr/lib/x86_64-linux-gnu/libcuda.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow_cuda.so
  FLAGS = -g
  LINK_LIBRARIES = -Wl,-rpath,/home/wamsi/raidStorage/arrow/cpp/build/debug /usr/lib/x86_64-linux-gnu/libcudart_static.a -lpthread -ldl /usr/lib/x86_64-linux-gnu/librt.so /usr/lib/x86_64-linux-gnu/libcuda.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow.so /usr/lib/x86_64-linux-gnu/libdouble-conversion.so /home/wamsi/raidStorage/arrow/cpp/build/debug/libarrow_cuda.so
  OBJECT_DIR = CMakeFiles/device_to_device_cuda.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = device_to_device_cuda
  TARGET_PDB = device_to_device_cuda.dbg
# =============================================================================
# Target aliases.

# =============================================================================
# Folder targets.

# =============================================================================
# =============================================================================
# Built-in targets


#############################################
# The main all target.

build all: phony arrow_gpu_test arrow_test device_to_device_copy arrow_serialization device_to_device_cuda

#############################################
# Make the all target the default.

default all

#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | ../CMakeLists.txt ../cmake/Modules/FindArrow.cmake /usr/share/cmake-3.13/Modules/CMakeCUDAInformation.cmake /usr/share/cmake-3.13/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.13/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.13/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.13/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.13/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.13/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.13/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.13/Modules/CheckIncludeFileCXX.cmake /usr/share/cmake-3.13/Modules/CheckLibraryExists.cmake /usr/share/cmake-3.13/Modules/CheckSymbolExists.cmake /usr/share/cmake-3.13/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.13/Modules/Compiler/GNU-CXX.cmake /usr/share/cmake-3.13/Modules/Compiler/GNU.cmake /usr/share/cmake-3.13/Modules/Compiler/NVIDIA-CUDA.cmake /usr/share/cmake-3.13/Modules/FindCUDA.cmake /usr/share/cmake-3.13/Modules/FindCUDA/select_compute_arch.cmake /usr/share/cmake-3.13/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake-3.13/Modules/FindPackageMessage.cmake /usr/share/cmake-3.13/Modules/FindThreads.cmake /usr/share/cmake-3.13/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake-3.13/Modules/Platform/Linux-GNU.cmake /usr/share/cmake-3.13/Modules/Platform/Linux.cmake /usr/share/cmake-3.13/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.13.4/CMakeCUDACompiler.cmake CMakeFiles/3.13.4/CMakeCXXCompiler.cmake CMakeFiles/3.13.4/CMakeSystem.cmake
  pool = console

#############################################
# A missing CMake input file is not an error.

build ../CMakeLists.txt ../cmake/Modules/FindArrow.cmake /usr/share/cmake-3.13/Modules/CMakeCUDAInformation.cmake /usr/share/cmake-3.13/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.13/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.13/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.13/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.13/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.13/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.13/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.13/Modules/CheckIncludeFileCXX.cmake /usr/share/cmake-3.13/Modules/CheckLibraryExists.cmake /usr/share/cmake-3.13/Modules/CheckSymbolExists.cmake /usr/share/cmake-3.13/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.13/Modules/Compiler/GNU-CXX.cmake /usr/share/cmake-3.13/Modules/Compiler/GNU.cmake /usr/share/cmake-3.13/Modules/Compiler/NVIDIA-CUDA.cmake /usr/share/cmake-3.13/Modules/FindCUDA.cmake /usr/share/cmake-3.13/Modules/FindCUDA/select_compute_arch.cmake /usr/share/cmake-3.13/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake-3.13/Modules/FindPackageMessage.cmake /usr/share/cmake-3.13/Modules/FindThreads.cmake /usr/share/cmake-3.13/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake-3.13/Modules/Platform/Linux-GNU.cmake /usr/share/cmake-3.13/Modules/Platform/Linux.cmake /usr/share/cmake-3.13/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.13.4/CMakeCUDACompiler.cmake CMakeFiles/3.13.4/CMakeCXXCompiler.cmake CMakeFiles/3.13.4/CMakeSystem.cmake: phony

#############################################
# Clean all the built files.

build clean: CLEAN

#############################################
# Print all primary targets available.

build help: HELP
